package com.sss.crm.workbench.mapper;

import com.sss.crm.workbench.domain.Clue;

import java.util.List;
import java.util.Map;

public interface ClueMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Thu Jul 02 08:55:31 CST 2020
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Thu Jul 02 08:55:31 CST 2020
     */
    int insert(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Thu Jul 02 08:55:31 CST 2020
     */
    int insertSelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Thu Jul 02 08:55:31 CST 2020
     */
    Clue selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Thu Jul 02 08:55:31 CST 2020
     */
    int updateByPrimaryKeySelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Thu Jul 02 08:55:31 CST 2020
     */
    int updateByPrimaryKey(Clue record);

    /**
     * 根据条件分页查询线索
     * @param map
     * @return
     */
    List<Clue> selectClueForPageByCondition(Map<String,Object> map);

    /**
     * 根据条件查询 符合的总条数
     * @param map
     * @return
     */
    long selectCountForPageByCondition(Map<String,Object> map);

    /**
     * 保存创建的线索
     * @param clue
     * @return
     */
    int insertClue(Clue clue);

    /**
     * 根据id批量删除线索
     * @param id
     * @return
     */
    int deleteClueByIds(String[] id);

    /**
     *  根据id查询线索
     * @param id
     * @return
     */
    Clue selectClueById(String id);

    /**
     * 保存修改的线索
     * @param clue
     * @return
     */
    int updateClue(Clue clue);

    /**
     * 根据id查询线索明细
     * @param id
     * @return
     */
    Clue selectClueDetailById(String id);

    /**
     * 根据线索id删除线索
     * @param clueId
     */
    void deleteClueById(String clueId);
}