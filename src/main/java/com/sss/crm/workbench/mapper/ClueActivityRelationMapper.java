package com.sss.crm.workbench.mapper;

import com.sss.crm.workbench.domain.ClueActivityRelation;

import java.util.List;

public interface ClueActivityRelationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Thu Jul 02 08:55:31 CST 2020
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Thu Jul 02 08:55:31 CST 2020
     */
    int insert(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Thu Jul 02 08:55:31 CST 2020
     */
    int insertSelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Thu Jul 02 08:55:31 CST 2020
     */
    ClueActivityRelation selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Thu Jul 02 08:55:31 CST 2020
     */
    int updateByPrimaryKeySelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Thu Jul 02 08:55:31 CST 2020
     */
    int updateByPrimaryKey(ClueActivityRelation record);

    /**
     * 批量插入关联关系
     * @param clueActivityRelationList
     * @return
     */
    int insertClueActivityRelation(List<ClueActivityRelation> clueActivityRelationList);

    /**
     * 根据市场活动id和线索id删除 关联关系
     * @param clueActivityRelation
     * @return
     */
    int deleteClueActivityRelationByAC(ClueActivityRelation clueActivityRelation);

    /**
     * 根据clueId查询
     * @param clueId
     * @return
     */
    List<ClueActivityRelation> selectCARByClueId(String clueId);

    /**
     * 根据线索id 删除 关联关系
     * @param clueId
     */
    void deleteRelationByClueId(String clueId);
}